import java.util.ArrayList;
import java.util.Scanner;

/**
 * Should probably change it so that it creates everything from the beginning, but asks them if they
 * want to make a custom dice or custom wheel.
 * @author Walker Roberts
 * @author Faisal Abou-Karnib
 * @author Mick Torrey
 */
public class GameRunner
{
    public static void main(String[] args)
    {
        Scanner input = new Scanner(System.in);
        int sides = 6;
        int numDice;
        ArrayList<Dice> diceList = new ArrayList<Dice>();
        String quitWhile = "";
        String kb = "";
        
        int coinLastFlipFlag = 0; // Checks to see if coin has already been flipped for last flip
        int diceLastRollFlag = 0;
        Coin newCoin = new Coin();
        Dice newDice = new Dice(6);
        //Create a wheel too
        
        System.out.println("Directions for use are located with input \"Whatever we make the input\""); // Should Make Some sort of list of allowed inputs and directions
        System.out.println("What would you like to use? Enter \"Coin\", \"Dice\", \"Custom Dice\", or \"Wheel\".");
        kb = input.nextLine(); 
        
        if(kb.toLowerCase() == "coin") {
            newCoin = new Coin();
        } else if (kb.toLowerCase() == "dice") {
           newDice = new Dice(6);
        }  else if (kb.toLowerCase() == "custom dice") {
            System.out.println("How many dice do you want?");
            numDice = input.nextInt();
            System.out.println("How many sides do you want to the dice?");
            sides = input.nextInt();
            for(int i = 0; i < numDice; i++) {
                newDice = new Dice(sides);
                diceList.add(newDice);
            }
        } else if (kb.toLowerCase() == "wheel") {
            
        } else {
            System.out.println("Invalid Input, Please Enter Another Input");
            kb = input.nextLine();
        }
        
        /**
         * Asks the user if they want to create another type of object,
         * loops till they say "no".
         */
        while (quitWhile != "no") {
            System.out.println("Would you like to create another object? Enter Yes or No.");
            String looper = input.nextLine();
            if (looper.toLowerCase() == "yes") {
                System.out.println("What would you like to use?");
                kb = input.nextLine();
            } else if (looper.toLowerCase() == "no") {
                quitWhile = looper;
            } 
        }
                
        System.out.println("You many now use your pieces."); //Change word pieces didn't know what to call them
        while (kb != "quit") {
            kb = input.nextLine();
            if (kb.toLowerCase() == "flip") {
                coinLastFlipFlag = 1;
                newCoin.Flip();
            } else if (kb.toLowerCase() == "last flip" && coinLastFlipFlag == 1) {
                newCoin.getLastFlip();
            } else if (kb.toLowerCase() == "last flip" && coinLastFlipFlag == 0) {
                System.out.println("No previous flip, this is the first flip.");
                coinLastFlipFlag = 1;
                newCoin.Flip();
            } else if (kb.toLowerCase() == "roll") {
                diceLastRollFlag = 1;
                for (int numOfDice = 0; numOfDice < diceList.size(); numOfDice++) {
                    Dice tempDice = new Dice(sides);
                    tempDice = diceList.get(numOfDice);
                    System.out.println(tempDice.Roll());
                }
            } else if (kb.toLowerCase() == "last roll" && diceLastRollFlag == 1) {
                for (int numOfDice = 0; numOfDice < diceList.size(); numOfDice++) {
                    Dice tempDice = new Dice(sides);
                    tempDice = diceList.get(numOfDice);
                    System.out.println(tempDice.getLastRoll());
                }
            } else if (kb.toLowerCase() == "last roll" && diceLastRollFlag == 0) {
                System.out.println("No previous roll, this is the first roll.");
                diceLastRollFlag = 1;
                for (int numOfDice = 0; numOfDice < diceList.size(); numOfDice++) {
                    Dice tempDice = new Dice(sides);
                    tempDice = diceList.get(numOfDice);
                    System.out.println(tempDice.getLastRoll());
                }
            } else if (kb.toLowerCase() == "set sides") {
                System.out.println("How many sides would you like to change your dice to?");
                sides = input.nextInt();
                for(int i = 0; i < diceList.size(); i++) {
                    newDice = new Dice(sides);
                    diceList.add(i, newDice);
                }
            } else if (kb.toLowerCase() == "get sides") {
                System.out.println(sides);
            } 
            
            else {
                System.out.println("Invalid input, please enter something else.");
                kb = input.nextLine();
            }
        }
        
        System.out.println("Thanks for playing!");
    }

}

